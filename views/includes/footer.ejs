<script type="module">
    import {doValidation} from '/js/validation.js';

    document.querySelector('.span-ico').addEventListener('click', ()=>{
        window.history.back();
    })

    document.querySelector(".add-prd").addEventListener('click', () => {
        document.querySelector("#add-product-overlay").style.display = 'block';
    })

    document.querySelector('.cont-close').addEventListener('click', () => {
        document.querySelector("#add-product-overlay").style.display = 'none';
    })

    
    document.addEventListener('click', (e) => {
        if(!e.target.closest('.hol-spans-main')) return;
        const spanPar = e.target.closest('.hol-spans-main');
        const target = spanPar.querySelector('.categ-phones').dataset.target;
        console.log(target);
        document.querySelector('.overlay-content').style.display = 'none';
        document.querySelector('.data-content').style.display = 'block';
        document.querySelector('.hol-close-cont').style.display = 'none';
        document.querySelector('.prd-name').innerHTML = target.toUpperCase();
        const addFormContainer = document.querySelector('.add-form-row');
        const fetchFormCol = () => {
            new Promise( async (res) => {
                const fetchCol = await fetch(`http://localhost:3000/sections/${target}`);
                const theCols = await fetchCol.json(); 
                theCols.forEach(col => {
                    let inpField;
                    let subs = [];
                    let productObj = {
                        year: ['-','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020','2021','2022','2023'],
                        ram: ['-','2 GB', '4 GB', '6 GB', '8 GB', '16 GB', '32 GB', '64 GB'],
                        storage: ['16 GB', '32 GB', '64 GB', '128 GB', '256 GB', '512 GB', '1 TB', '2 TB'],
                        processor : ['-', 'Core i5', 'Core i7','M1', 'M2'],
                        touchbar : ['No', 'Yes'],
                        display : ['-','Led', 'Retina']
                    };
                    if(col === 'date_added' || col === 'time_added' || col === 'temp_quantity') return;
                    const vers = col.toUpperCase();
                    const spanVer = (vers === 'VERSION' || vers === 'BH' || vers === 'COLOR') ? '' : '<span>*</span>';
                    switch(target){
                        case 'phones':
                            productObj.model = ['se','5','6','7','8','x','11','12','13','14'];
                            productObj.version = ['-','1','2','c','r','s','s-plus', 's-max','pro','pro-max','mini','plus'];
                            productObj.color = ['black','white','red','blue','pink','green','gold','silver','space gray'];
                            break;
                        case 'ipad':
                            productObj.model = ['ipad'];
                            productObj.version = ['-','air','mini','pro'];
                            productObj.color = ['black','white','red','blue','pink','green','gold','silver','space gray'];
                            break;
                        case 'macbook':
                            productObj.model = ['macbook'];
                            productObj.version = ['air','pro'];
                            productObj.color = ['black','white','red','blue','pink','green','gold','silver','space gray'];
                            break;
                        case 'series':
                            productObj.model = ['series'];
                            productObj.version = ['1','2','3','4','5','6','7','se','ultra'];
                            productObj.color = ['black','white','red','blue','pink','green','gold','silver','space gray'];
                            productObj.screen = ['40mm', '44mm'];
                            break;
                        case 'airpod':
                            productObj.model = ['airpod'];
                            productObj.version = ['1','2','3','pro','3-pro','2-pro'];
                            productObj.color = ['black','white'];
                            break;
                        case 'homepod':
                            productObj.model = ['homepod'];
                            productObj.version = ['1','2'];
                            productObj.color = ['black','white'];
                            break;
                        case 'accessories':
                            productObj.product_type = ['Type C head (2 pins)','Type C head (3 pins)','Type C cord','USB head (2 pins)','USB head (3 pins)','USB cord','Earpiece Brush','Earpiece Pin','Battery','Phone Cover','3-in-1 Dock','Normal Protector','Privacy Protector','360 Protector','series protector','Screen','Camera Lens','Series Straps','Dongle','Airpods Case','Series Charger','Laptop Charger'];
                            break;
                        default:
                            break;
                    }
                    let whatAct;
                    if(vers === 'MODEL' || vers === 'VERSION' || vers === 'SCREEN' || vers === 'COLOR' || vers === 'YEAR' || vers === 'RAM' || vers === 'STORAGE' || vers === 'PROCESSOR' || vers === 'TOUCHBAR' || vers === 'DISPLAY' || vers === 'PRODUCT_TYPE'){
                        const smallId = vers.toLowerCase();
                        const id = vers === 'MODEL' ? 'model' : '';
                        const versData = (productObj[smallId]) ? productObj[smallId] : '';
                        let optionRow = `<option value=''>Select ${vers.replace('_',' ')}</option>`;
                        versData.forEach(res => {
                            optionRow += `<option value='${(res==='-')?'':res}'>${res.length <= 1 ? res : res.split('-').join(' ').toUpperCase()}</option>`;
                        }) 
                        whatAct = `<select type="text" class="form-control select-det" id="${id}" name="${col}">${optionRow}</select>`;
                    }
                    else{
                        const inpType = (vers === 'PRICE' || vers === 'QUANTITY') ? 'number' : 'text';
                        const min = (vers === 'PRICE' || vers === 'QUANTITY') ? `min='1'` : '';
                        whatAct = `<input type="${inpType}" ${min} class="form-control" id="" name="${col}">`;
                    }
                    inpField = `
                            <div class="form-group col-md-6">
                                <label for="">${col.replace('_', ' ').toUpperCase()} ${spanVer}</label>
                                ${whatAct}
                            </div>`;
                    addFormContainer.insertAdjacentHTML('beforeend', inpField)
                })
                return res(document.querySelectorAll('.select-det'))
            }).then((res) => res.forEach(sel=>{
                const tag = (sel.id === 'model') ? false : true;
                $(sel).select2({tags:tag})
            }))
        }
        fetchFormCol()
    })


    document.querySelector('.add-form').addEventListener('click', (e) => {
        e.preventDefault();
        if(!e.target.closest('.btn')) return;
        const clickAction = e.target.closest('.btn').dataset;
        if(clickAction.action === 'back'){
            document.querySelector('.add-form-row').innerHTML = '';
            document.querySelector('.overlay-content').style.display = 'block';
            document.querySelector('.data-content').style.display = 'none';
            document.querySelector('.hol-close-cont').style.display = 'block';     
        }

        if(clickAction.action === 'add'){
            let target = document.querySelector('.prd-name').innerHTML.toLowerCase();
            target = target.trim();
            // document.querySelector('.add-form').addEventListener('submit', function(e){
            //     e.preventDefault();
            // })
            doValidation('.add-form', `http://localhost:3000/insert/${target}`, 'POST');
        }
    })

</script>